---
# Starter pipeline

variables:
  - name: 'destenv'
    type: string

  - name: storageAccount-qa
    value: 'hardacinfrthmb00saqa'
  
  - name: storageAccount-stg
    value: 'hardacinfrthmb00sastg'
  
  - name: storageAccount-prd
    value: 'hardacinfrthmb00saprd'
  

  - name: serviceConnection-qa
    value: 'HARDAC-Qa'
  
  - name: serviceConnection-stg
    value: 'HARDAC-Stage'
  
  - name: serviceConnection-prd
    value: 'HARDAC-Prod'
  


  
  - name: SourceSA
    value: 'hardacinfrthmb00saprd'
  - name: SourceSC
    value: 'HARDAC-Prod'

  - name: 'DestinationSA'
    value: "{'uat' : 'hardacinfrthmb00sastg', 'qa' : 'hardacinfrthmb00saqa'}"
  - name: 'DestinationSC'
    value: "{'uat' : 'HARDAC-Stage', 'qa' : 'HARDAC-Qa'}"  
  
  

pool:
  vmImage: ubuntu-latest

stages:
  - stage: 'Trigger_Copy_thumbnails'
    displayName: 'Copy Thumbnails'
    condition: succeeded()
    jobs:
      - job: "Build_Pipeline"
        variables:
          job_variable: $(storageAccount-${{ parameters.destenv }})
        displayName: "Copy Thumbnails"
        timeoutInMinutes: 10
        steps:
          - task: AzureCLI@1
            name: GenerateSASSource
            env:
              AZURE_STORAGE_AUTH_MODE: login
            inputs:
              azureSubscription: $(serviceConnection-prd)
              scriptLocation: inlineScript
              workingDirectory: $(Build.SourcesDirectory)/mlops
              inlineScript: |
                echo 'Generate SAS Token for source'
                end=`date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
                sasSource=$(az storage account generate-sas --permissions acdlpruw --account-name $(storageAccount-prd) --services bfqt --resource-types sco --expiry $end -o tsv)
                echo "##vso[task.setvariable variable=sasSource]$sasSource"
                echo $sasSource           
              artifact: variables
          
          - task: AzureCLI@1
            name: GenerateSASDestination
            env:
              AZURE_STORAGE_AUTH_MODE: login
            inputs:
              azureSubscription: $(serviceConnection-${{ parameters.destenv }})
              scriptLocation: inlineScript
              workingDirectory: $(Build.SourcesDirectory)/mlops
              inlineScript: |
                
                end=`date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
                
                echo 'Generate SAS Token for Destination'
                sasDestination=$(az storage account generate-sas --permissions acdlpruw --account-name $(storageAccount-${{ parameters.destenv }}) --services bfqt --resource-types sco --expiry $end -o tsv)
                echo "##vso[task.setvariable variable=sasDestination]$sasDestination"
                echo $sasDestination              
              artifact: variables
            
          - task: AzureCLI@1
            name: Copy
            env:
              AZURE_STORAGE_AUTH_MODE: login
            inputs:
              azureSubscription: 'HARDAC-Backup'
              scriptLocation: inlineScript
              workingDirectory: $(Build.SourcesDirectory)/mlops
              inlineScript: |
                
                echo "starting azcopy command"
                echo "from"
                echo "https://$(SourceSA).blob.core.windows.net"
                echo "to"
                echo "https://$(DestinationSA).blob.core.windows.net"
                
                azcopy copy "https://$(SourceSA).blob.core.windows.net/?$(sasSource)" "https://$(DestinationSA).blob.core.windows.net/?$(sasDestination)" --recursive --overwrite "ifSourceNewer"
              artifact: variables
